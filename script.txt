import rl_network.critic_network as cnn
CNN = cnn.CriticNN(3)

print(CNN.run_value([[1., 2., 3.], [2., 3., 4.], [5., 6., 7.], [0.5, 0.6, 0.7]]))
print(CNN.run_learning([[13.]], [[1., 2., 3.]], [[2., 3., 4.]]))
print(CNN.run_value([[1., 2., 3.], [2., 3., 4.], [5., 6., 7.], [0.5, 0.6, 0.7]]))

print(CNN.run_value([[1., 2., 3.], [0., 3., 4.], [0., 6., 7.], [0, 0.6, 0.7], [1., 20., 4.]]))
print(CNN.run_learning([[100.]], [[0., 2., 3.]], [[1., 2., 3.]]))
print(CNN.run_value([[1., 2., 3.], [0., 3., 4.], [0., 6., 7.], [0, 0.6, 0.7], [1., 20., 4.]]))

print(CNN.run_value([[0., 0., 0.], [0., 1., 0.], [0., 0., 1.], [0, 1, 1.], [1., 0., 0.]]))
print(CNN.run_learning([[100.]], [[0., 0., 0.]], [[1., 0., 0.]]))
print(CNN.run_learning([[100.]], [[0., 1., 0.]], [[1., 1., 0.]]))
print(CNN.run_learning([[100.]], [[0., 0., 1.]], [[1., 0., 1.]]))
print(CNN.run_learning([[100.]], [[0., 1., 1.]], [[1., 1., 1.]]))
print(CNN.run_value([[0., 0., 0.], [0., 1., 0.], [0., 0., 1.], [0, 1, 1.], [1., 0., 0.]]))

import rl_network.critic_network as cnn
CNN = cnn.CriticNN(6)
print(CNN.run_value([[0., 0., 0., 0., 0., 0.], [0., 1., 0., 0., 0., 0.], [0., 0., 1., 0., 0., 0.,], [0., 0., 0., 1., 0., 0.], [0., 1., 0., 1., 0., 0.]]))
print(CNN.run_learning([[100.]], [[0., 0., 0., 0., 0., 0.]], [[1., 0., 0., 0., 0., 0.]]))
print(CNN.run_learning([[100.]], [[0., 1., 0., 0., 0., 0.]], [[1., 1., 0., 0., 0., 0.]]))
print(CNN.run_learning([[-100.]], [[0., 1., 0., 0., 0., 0.]], [[0., 1., 0., 1., 0., 0.]]))
print(CNN.run_learning([[-100.]], [[0., 0., 0., 0., 0., 0.]], [[0., 0., 0., 1., 0., 0.]]))
print(CNN.run_learning([[100.]], [[0., 0., 1., 0., 0., 0.]], [[1., 0., 1., 0., 0., 0.]]))

print(CNN.run_value([[0., 0., 0., 0., 0., 0.], [0., 1., 0., 0., 0., 0.], [0., 0., 1., 0., 0., 0.,], [0., 0., 0., 1., 0., 0.], [0., 1., 0., 1., 0., 0.]]))
print(CNN.run_learning([[100.]], [[0., 1., 0., 0., 0., 0.]], [[1., 1., 0., 0., 0., 0.]]))
print(CNN.run_value([[0., 0., 0., 0., 0., 0.], [0., 1., 0., 0., 0., 0.], [0., 0., 1., 0., 0., 0.,], [0., 0., 0., 1., 0., 0.], [0., 1., 0., 1., 0., 0.]]))

import rl_network.critic_network as cnn
CNN = cnn.CriticNN(11)
print(CNN.run_value([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]]))
print(CNN.run_learning([[0.]], [[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], [[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]]))
print(CNN.run_learning([[0.]], [[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], [[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.]]))
print(CNN.run_learning([[0.]], [[0., 0., 0., 0., 0., 0., 0.,0., 0., 0., 1.]], [[0., 0., 1., 0., 0.,0., 0., 0., 0., 0., 0.]]))
print(CNN.run_learning([[10.]], [[0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.]], [[1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]]))
print(CNN.run_value([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.], [0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.], [1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]]))

rm model/*
